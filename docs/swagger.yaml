basePath: /api/v1
definitions:
  sql.OrderItem:
    properties:
      id:
        type: integer
      orderID:
        type: integer
      productID:
        type: integer
    type: object
  sql.OrderPayment:
    properties:
      id:
        type: integer
      orderID:
        type: integer
      paymentMethodID:
        type: integer
    type: object
  sql.PaymentMethod:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: integer
      orderPayments:
        items:
          $ref: '#/definitions/sql.OrderPayment'
        type: array
    type: object
  sql.Product:
    properties:
      id:
        type: integer
      name:
        type: integer
      orderItems:
        items:
          $ref: '#/definitions/sql.OrderItem'
        type: array
      price:
        type: number
    type: object
  web.CustomerOutput:
    properties:
      customer_address_id:
        type: integer
      customer_id:
        type: integer
      name:
        type: string
    type: object
  web.NormalResp:
    properties:
      data:
        type: any
      message:
        type: string
      status:
        type: string
    type: object
  web.PostOrderInput:
    type: object
  web.PostOrderOutput:
    type: object
  web.RegisterCustomerInput:
    properties:
      address:
        type: string
      name:
        type: string
    required:
    - address
    - name
    type: object
  web.RegisterCustomerOutput:
    properties:
      address:
        type: string
      customer_address_id:
        type: integer
      customer_id:
        type: integer
      name:
        type: string
    type: object
info:
  contact:
    email: riidloa@gmail.com
    name: Developer
  description: API provide simple transaction
  title: Transaction API
  version: "1.0"
paths:
  /customer:
    post:
      description: add new customer
      parameters:
      - description: Register new customer
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/web.RegisterCustomerInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/web.NormalResp'
            - properties:
                data:
                  $ref: '#/definitions/web.RegisterCustomerOutput'
              type: object
      summary: add new customer
      tags:
      - Customer
  /customers:
    get:
      description: get all customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/web.NormalResp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/web.CustomerOutput'
                  type: array
              type: object
      summary: get all customers
      tags:
      - Customer
  /order:
    post:
      description: add new user
      parameters:
      - description: Entry new order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/web.PostOrderInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/web.NormalResp'
            - properties:
                data:
                  $ref: '#/definitions/web.PostOrderOutput'
              type: object
      summary: add new user
      tags:
      - User
  /payment/methods:
    get:
      description: get all avalaible payment methods
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/web.NormalResp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/sql.PaymentMethod'
                  type: array
              type: object
      summary: get all avalaible payment methods
      tags:
      - Payment
  /products:
    get:
      description: get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/web.NormalResp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/sql.Product'
                  type: array
              type: object
      summary: get all products
      tags:
      - Product
swagger: "2.0"
